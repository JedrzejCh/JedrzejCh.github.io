!function(n){var t={};function c(e){if(t[e])return t[e].exports;var l=t[e]={i:e,l:!1,exports:{}};return n[e].call(l.exports,l,l.exports,c),l.l=!0,l.exports}c.m=n,c.c=t,c.d=function(n,t,e){c.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:e})},c.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},c.t=function(n,t){if(1&t&&(n=c(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(c.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var l in n)c.d(e,l,function(t){return n[t]}.bind(null,l));return e},c.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return c.d(t,"a",t),t},c.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},c.p="",c(c.s=0)}([function(module,exports,__webpack_require__){"use strict";eval("\n\nconst titles = document.querySelectorAll(\".project-card__h4\");\nconst descriptions = document.querySelectorAll(\".project-card__paragraph\");\nconst demoLinks = document.querySelectorAll(\".list-wrapper--demo\");\nconst githubLinks = document.querySelectorAll(\".list-wrapper--github\");\nconst gridCards = document.querySelector(\".projects__grid--js\");\nconsole.log(`Welcome to my site`);\nconsole.log(\"Hey ðŸ™ƒ nice of you to come here. Now that you're here, let me introduce myself briefly. I am 23 years old and live in WrocÅ‚aw. I'm nice and I don't have any problems with contact with people. I learn Frontend technology and new things as much as I can and I enjoy it a lot. I often lose track of my time at the same time ðŸ˜…. Besides, I like to spend time actively. I like skiing very much, I like climbing, sailing and traveling.\")\n\nfetch(\"https://api.github.com/users/JedrzejCh/repos\")\n  .then(resp => resp.json())\n  .then(resp => {\n    const repos = resp;\n\n    for (const repo of repos) {\n      const { description, html_url, name, has_pages } = repo;\n      gridCards.innerHTML += `\n<div class=\"project-card\">\n          <img src=\"../assets/img/github.svg\" alt=\"Github logo\" class=\"project-card__icon\">\n          <h4 class=\"project-card__h4\">${name}</h4>\n          <p class=\"project-card__paragraph\">${description}</p>\n          <div class=\"list-wrapper\">\n            <ul class=\"list-wrapper__ul\">\n          ${\n        has_pages ? `<li class=\"list-wrapper__li\"><a href=\"https://jedrzejch.github.io/${name}/\" target=\"_blank\" rel=\"nofollow noreferrer\" class=\"list-wrapper__a list-wrapper__a--demo\">Demo</a></li>` : ''\n        }\n              <li class=\"list-wrapper--li\"><a href=\"${html_url}\" target=\"_blank\" rel=\"no follow no referrer\" class=\"list-wrapper__a list-wrapper__a--github\">Github</a></li>\n            </ul>\n          </div>\n        </div>\n`;\n    }\n\n  })\n  .catch(err => {\n    console.log(err)\n  })\n\n//FORM\n\n$(function () {\n  'use strict';\n\n  const formDataElements = {};\n\n  const inputs = document.querySelectorAll('.form-data');\n\n  inputs.forEach((el) => {\n    formDataElements[el.getAttribute('name')] = el;\n  });\n\n  const recaptcha = document.querySelector('.g-recaptcha');\n\n  const customErrors = {\n    tooShort: (fieldName, min) => 'Field must contain at least ' + min + ' characters.',\n    tooLong: (fieldName, max) => 'Field may contain at least ' + max + ' characters.',\n    empty: fieldName => 'Field cannot be empty.',\n    type: fieldName => 'Field ' + fieldName + ' is incorrect.',\n    errorsInForm: '',\n    recaptcha: 'Confirm that you are not a robot.',\n  };\n\n  const contactForm = $('#formularz-kontaktowy');\n  const formAlert = document.querySelector('.emailFormAlert');\n\n  function toggleContactForm(state) {\n    if (typeof state !== 'boolean') throw new TypeError('State must be a boolean');\n\n    if (state === true) {\n      contactForm.fadeIn();\n      contactForm.attr('aria-hidden', 'false');\n      firstInput.focus();\n    } else {\n      contactForm.fadeOut();\n      contactForm.attr('aria-hidden', 'true');\n\n      for (const input in formDataElements) {\n        formDataElements[input].value = '';\n      }\n\n      grecaptcha.reset();\n      openContactBtn.focus();\n    }\n  }\n\n  const closeContactBtn = $('#close-contact-btn');\n  const openContactBtn = $('#open-contact-btn');\n\n  openContactBtn.click(() => {\n    toggleContactForm(true);\n  });\n\n  closeContactBtn.click(() => {\n    toggleContactForm(false);\n  });\n\n  const firstInput = $('.form-data:first');\n\n  if (document.location.hash === '#formularz-kontaktowy') {\n    openContactBtn.focus();\n    openContactBtn.click();\n  }\n\n  closeContactBtn.on('keydown', (e) => {\n    if ((e.which === 9 && !e.shiftKey)) { // tab\n      e.preventDefault();\n      firstInput.focus();\n    }\n  });\n\n  firstInput.on('keydown', (e) => {\n    if ((e.which === 9 && e.shiftKey)) { // tab \n      e.preventDefault();\n      closeContactBtn.focus();\n    }\n  });\n\n  contactForm.on('keydown', (e) => {\n    if ((e.which === 27)) { // esc\n      toggleContactForm(false);\n    }\n  });\n\n\n  $('.emailFormSubmit').click((event) => {\n    formAlert.innerHTML = '<i class=\"fa fa-spinner fa-pulse fa-2x fa-fw\"></i>';\n    event.preventDefault();\n\n    const isValid = validateEmailForm();\n\n    if (isValid === true) {\n      const formData = {\n        'g-recaptcha-response': grecaptcha.getResponse(),\n      };\n\n      grecaptcha.reset();\n\n      for (const el in formDataElements) {\n        formData[el] = formDataElements[el].value;\n      }\n\n      const sendEmail = $.ajax({\n        type: 'POST',\n        url: document.querySelector('.emailForm').getAttribute('action'),\n        dataType: 'json',\n        data: formData,\n      });\n\n      sendEmail.fail((error) => {\n        console.log(error);\n        formAlert.innerHTML = customErrors.errorsInForm;\n      });\n\n      sendEmail.done((response) => {\n        console.log(response);\n        formAlert.innerHTML = 'Thanks for your message';\n      });\n    } else {\n      formAlert.innerHTML = customErrors.errorsInForm;\n    }\n  });\n\n  function validateEmailForm() {\n    let valid = true;\n    for (const el in formDataElements) {\n      const fieldName = formDataElements[el].parentElement.innerText;\n\n      if (formDataElements[el].validity.valueMissing === true) {\n        markWrongInput(formDataElements[el], customErrors.empty(fieldName.toLowerCase()));\n      } else if (formDataElements[el].validity.tooShort === true) {\n        const min = formDataElements[el].getAttribute('minlength');\n        markWrongInput(formDataElements[el], customErrors.tooShort(fieldName.toLowerCase(), min));\n      } else if (formDataElements[el].validity.tooLong === true) {\n        const max = formDataElements[el].getAttribute('maxlength');\n        markWrongInput(formDataElements[el], customErrors.tooLong(fieldName.toLowerCase(), max));\n      } else if (formDataElements[el].validity.typeMismatch === true) {\n        markWrongInput(formDataElements[el], customErrors.type(fieldName.toLowerCase()));\n      }\n      if (formDataElements[el].validity.valid === false) {\n        valid = false;\n      }\n    }\n    if (grecaptcha.getResponse().length === 0) {\n      markWrongInput(recaptcha, customErrors.recaptcha);\n      valid = false;\n    }\n    return valid;\n  }\n\n  function markWrongInput(wrongElement, alert) {\n    if (wrongElement.classList.contains('wrongInput')) {\n      return;\n    }\n\n    const errorMessageEl = document.createElement('p');\n    errorMessageEl.classList.add('error');\n    errorMessageEl.classList.add('wrongInput');\n    errorMessageEl.textContent = alert;\n\n    wrongElement.parentElement.append(errorMessageEl);\n    wrongElement.classList.add('wrongInput');\n    wrongElement.addEventListener('focus', clearErrors);\n  }\n\n  function clearErrors() {\n    this.classList.remove('wrongInput');\n    this.parentElement.removeChild(this.parentElement.getElementsByClassName('error')[0]);\n    formAlert.innerHTML = '';\n  }\n\n  window.recaptchaClearErr = () => {\n    document.querySelector('.g-recaptcha').focus();\n  };\n});\n\nfunction RecaptchaClearMsg() {\n  document.querySelector('.g-recaptcha').focus();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);